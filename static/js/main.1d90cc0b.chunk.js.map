{"version":3,"sources":["../node_modules/faker/locale sync /^/.*$","settings.js","SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","API_URL","GET_RANDOM_TWEET_URL","GET_POST_FROM_ID","GET_POSTER_INFO_URL","GET_VIEWERS_URL","GET_IDs_FROM_VIEWER_URL","SidebarOption","active","text","Icon","onClick","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","this","props","nextViewer","MoreHorizIcon","Button","variant","React","Component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","target","value","placeholder","type","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","media","explanation","ReactPlayer","canPlay","url","muted","loop","playing","height","width","console","log","alt","fontSize","getRandomUser","mocker","schema","firstName","faker","lastName","function","object","buildSync","Feed","addPost","n","i","setState","loading","state","idList","splice","Math","floor","random","length","postURL","settings","axios","get","then","response","post","data","poster_url","startsWith","substring","image_response","catch","err","push","poster_response","userInfo","fake_user","posts","concat","forceUpdate","err2","handleScroll","element","height_target","round","scrollHeight","scrollTop","ceil","clientHeight","queue","handleClick","viewedList","prevProps","viewer","viewerURL","reponse","onScroll","index","key","color","Widgets","App","viewerNum","viewersList","bind","lang","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1d90cc0b.chunk.js","sourcesContent":["var map = {\n\t\"./ReadMe.md\": 1714,\n\t\"./af_ZA\": 133,\n\t\"./af_ZA.js\": 133,\n\t\"./ar\": 134,\n\t\"./ar.js\": 134,\n\t\"./az\": 135,\n\t\"./az.js\": 135,\n\t\"./cz\": 136,\n\t\"./cz.js\": 136,\n\t\"./de\": 137,\n\t\"./de.js\": 137,\n\t\"./de_AT\": 138,\n\t\"./de_AT.js\": 138,\n\t\"./de_CH\": 139,\n\t\"./de_CH.js\": 139,\n\t\"./el\": 140,\n\t\"./el.js\": 140,\n\t\"./en\": 141,\n\t\"./en.js\": 141,\n\t\"./en_AU\": 142,\n\t\"./en_AU.js\": 142,\n\t\"./en_AU_ocker\": 143,\n\t\"./en_AU_ocker.js\": 143,\n\t\"./en_BORK\": 144,\n\t\"./en_BORK.js\": 144,\n\t\"./en_CA\": 145,\n\t\"./en_CA.js\": 145,\n\t\"./en_GB\": 146,\n\t\"./en_GB.js\": 146,\n\t\"./en_GH\": 147,\n\t\"./en_GH.js\": 147,\n\t\"./en_IE\": 148,\n\t\"./en_IE.js\": 148,\n\t\"./en_IND\": 149,\n\t\"./en_IND.js\": 149,\n\t\"./en_NG\": 150,\n\t\"./en_NG.js\": 150,\n\t\"./en_US\": 151,\n\t\"./en_US.js\": 151,\n\t\"./en_ZA\": 152,\n\t\"./en_ZA.js\": 152,\n\t\"./es\": 153,\n\t\"./es.js\": 153,\n\t\"./es_MX\": 154,\n\t\"./es_MX.js\": 154,\n\t\"./fa\": 155,\n\t\"./fa.js\": 155,\n\t\"./fi\": 156,\n\t\"./fi.js\": 156,\n\t\"./fr\": 157,\n\t\"./fr.js\": 157,\n\t\"./fr_CA\": 158,\n\t\"./fr_CA.js\": 158,\n\t\"./fr_CH\": 159,\n\t\"./fr_CH.js\": 159,\n\t\"./ge\": 160,\n\t\"./ge.js\": 160,\n\t\"./hr\": 161,\n\t\"./hr.js\": 161,\n\t\"./hy\": 162,\n\t\"./hy.js\": 162,\n\t\"./id_ID\": 163,\n\t\"./id_ID.js\": 163,\n\t\"./it\": 164,\n\t\"./it.js\": 164,\n\t\"./ja\": 165,\n\t\"./ja.js\": 165,\n\t\"./ko\": 166,\n\t\"./ko.js\": 166,\n\t\"./nb_NO\": 167,\n\t\"./nb_NO.js\": 167,\n\t\"./ne\": 168,\n\t\"./ne.js\": 168,\n\t\"./nl\": 169,\n\t\"./nl.js\": 169,\n\t\"./nl_BE\": 170,\n\t\"./nl_BE.js\": 170,\n\t\"./pl\": 171,\n\t\"./pl.js\": 171,\n\t\"./pt_BR\": 172,\n\t\"./pt_BR.js\": 172,\n\t\"./pt_PT\": 173,\n\t\"./pt_PT.js\": 173,\n\t\"./ro\": 174,\n\t\"./ro.js\": 174,\n\t\"./ru\": 175,\n\t\"./ru.js\": 175,\n\t\"./sk\": 176,\n\t\"./sk.js\": 176,\n\t\"./sv\": 177,\n\t\"./sv.js\": 177,\n\t\"./tr\": 178,\n\t\"./tr.js\": 178,\n\t\"./uk\": 179,\n\t\"./uk.js\": 179,\n\t\"./vi\": 180,\n\t\"./vi.js\": 180,\n\t\"./zh_CN\": 181,\n\t\"./zh_CN.js\": 181,\n\t\"./zh_TW\": 182,\n\t\"./zh_TW.js\": 182,\n\t\"./zu_ZA\": 183,\n\t\"./zu_ZA.js\": 183\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1713;","export const API_URL = \"/api/\"\r\nexport const GET_RANDOM_TWEET_URL = API_URL + \"getRandomTweet/\"\r\nexport const GET_POST_FROM_ID = API_URL + \"getPostFromID/\"\r\nexport const GET_POSTER_INFO_URL = API_URL + \"getUserInfo/\"\r\nexport const GET_VIEWERS_URL = API_URL + \"viewers/\"\r\nexport const GET_IDs_FROM_VIEWER_URL = API_URL + \"ViewerToId/\"\r\n\r\nexport default {API_URL, GET_RANDOM_TWEET_URL, GET_POST_FROM_ID ,GET_POSTER_INFO_URL, GET_VIEWERS_URL, GET_IDs_FROM_VIEWER_URL}","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon, onClick }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`} onClick={onClick}>\r\n      <Icon />\r\n      <h2 className={'text'}>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass Sidebar extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n\r\n        <SidebarOption Icon={HomeIcon} text=\"Home\" />\r\n        <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n        <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n        <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n        <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n        <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n        <SidebarOption active Icon={PermIdentityIcon} text=\"Profile\" onClick={this.props.nextViewer}/>\r\n\r\n\r\n        <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n\r\n        <Button variant=\"outlined\" className=\"sidebar__tweet\">\r\n          Tweet\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCw-li0IscS2rJr68dSjoJL3KM3eFq5PfE\",\r\n  authDomain: \"twitter-clone-1faac.firebaseapp.com\",\r\n  databaseURL: \"https://twitter-clone-1faac.firebaseio.com\",\r\n  projectId: \"twitter-clone-1faac\",\r\n  storageBucket: \"twitter-clone-1faac.appspot.com\",\r\n  messagingSenderId: \"316208638057\",\r\n  appId: \"1:316208638057:web:75a37bf24fab32ff145af8\",\r\n  measurementId: \"G-HGFP2LDXP9\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { useState } from \"react\";\r\nimport \"./TweetBox.css\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\n\r\nfunction TweetBox() {\r\n  const [tweetMessage, setTweetMessage] = useState(\"\");\r\n  const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n  const sendTweet = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").add({\r\n      displayName: \"Rafeh Qazi\",\r\n      username: \"cleverqazi\",\r\n      verified: true,\r\n      text: tweetMessage,\r\n      image: tweetImage,\r\n      avatar:\r\n        \"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\",\r\n    });\r\n\r\n    setTweetMessage(\"\");\r\n    setTweetImage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweetBox\">\r\n      <form>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar src=\"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\" />\r\n          <input\r\n            onChange={(e) => setTweetMessage(e.target.value)}\r\n            value={tweetMessage}\r\n            placeholder=\"What's happening?\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <input\r\n          value={tweetImage}\r\n          onChange={(e) => setTweetImage(e.target.value)}\r\n          className=\"tweetBox__imageInput\"\r\n          placeholder=\"Optional: Enter image URL\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <Button\r\n          onClick={sendTweet}\r\n          type=\"submit\"\r\n          className=\"tweetBox__tweetButton\"\r\n        >\r\n          Tweet\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetBox;\r\n","import React, { forwardRef } from \"react\";\r\nimport ReactPlayer from 'react-player/lazy'\r\n\r\nimport \"./Post.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\n\r\n\r\n\r\n// TODO: Add explanation support\r\n//TODO: Autoplay when in view\r\nconst Post = forwardRef(({ displayName, username, verified, text, image, avatar, explanation }, ref) => {\r\n\r\n  // Check if react-player can play media\r\n  // Falls back to image display if ir cannot\r\n  let media\r\n  if(ReactPlayer.canPlay(image)){\r\n    media = (\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer url={image}\r\n        muted={true} loop={true} playing={false} height={\"45vh\"} width={null}>\r\n        <div/>\r\n      </ReactPlayer>\r\n    </div>)\r\n    console.log(\"play!\")\r\n  }\r\n  else if (image !== \"\" && image != null){\r\n    media = <img src={image} alt=\"\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\" ref={ref}>\r\n\r\n      <div className=\"post__avatar\">\r\n        <Avatar src={avatar} />\r\n      </div>\r\n\r\n      <div className=\"post__body\">\r\n\r\n        <div className=\"post__header\">\r\n          <div className=\"post__headerText\">\r\n            <h3>\r\n              {displayName}{\" \"}\r\n              <span className=\"post__headerSpecial\">\r\n              {verified && <VerifiedUserIcon className=\"post__badge\"/>} @\r\n                {username}\r\n            </span>\r\n            </h3>\r\n          </div>\r\n          <div className=\"post__headerDescription\">\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n        {media}\r\n        <div className=\"post__footer\">\r\n          <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n          <RepeatIcon fontSize=\"small\" />\r\n          <FavoriteBorderIcon fontSize=\"small\" />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport axios from \"axios\"\r\n\r\nimport settings from \"./settings\"\r\n\r\nimport TweetBox from \"./TweetBox\";\r\nimport Post from \"./Post\";\r\nimport \"./Feed.css\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nimport mocker from 'mocker-data-generator'\r\n\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {loading: false, queue: false, posts: [], idList: [], viewedList: []};\r\n  }\r\n\r\n  /*\r\n  // Only update DOM when things aren't loading\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return !this.state.loading;\r\n  }\r\n  */\r\n\r\n  componentDidMount(){\r\n    this.addPost()\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.state.queue == true){\r\n      this.addPost()\r\n      this.state.queue = false\r\n    }\r\n    // Check if Viewer has been changed\r\n    if(prevProps.viewer !== this.props.viewer){\r\n      this.setState({posts: [], loading: true})\r\n\r\n      const viewerURL = settings.GET_IDs_FROM_VIEWER_URL + this.props.viewer + \"/\"\r\n      console.log(\"Getting IDs from: \" + viewerURL)\r\n      axios\r\n        .get(viewerURL)\r\n        .then((reponse)=>{\r\n          const data = reponse.data\r\n          console.log(data)\r\n\r\n          this.setState({idList: data})\r\n\r\n          for (let i = 0; i < 6; i++) {\r\n            this.addPost();\r\n          }\r\n\r\n          this.setState({loading: false})\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n    }\r\n  }\r\n\r\n  \r\n  addPost = (n=1) => {\r\n    for(let i=0;i<n && this.state.idList.length > 0;i++){\r\n      console.log(\"Adding post\")\r\n      this.setState({loading: true});\r\n\r\n      // Gets a random ID and removes it from idList\r\n      const id = this.state.idList.splice(Math.floor(Math.random() * this.state.idList.length), 1)\r\n\r\n      const postURL = settings.GET_POST_FROM_ID + id + \"/\"\r\n      console.log(\"Getting post from: \" + postURL)\r\n      \r\n      axios\r\n        .get(postURL)// gets the tweet, including the poster's username\r\n        .then(response => {\r\n          let post = response.data[0];\r\n          const poster_url = settings.GET_POSTER_INFO_URL + post['poster'] + '/'\r\n\r\n          // If the post's image URL contains API redirect, set image url to the API's answer\r\n          if(post['image'].startsWith('api:')){\r\n            axios\r\n              .get(post['image'].substring(4))\r\n              .then(image_response => post['image'] = image_response.data)\r\n              .catch(err => console.log(err + \"—retrieving from \" + post['image'].substring(4)))\r\n\r\n            // Sets image url to a loading gif while waiting for photo\r\n            post['image'] = \"https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif\"\r\n          }\r\n\r\n          // If post's text starts with [repeat] tag, put post id back into idList\r\n          if(post['text'].startsWith('[repeat]')){\r\n            post['text'] = post['text'].substring(8)\r\n            this.state.idList.push(id)\r\n          }\r\n\r\n          axios\r\n            .get(poster_url) // gets the poster's info from their username that was acquired above\r\n            .then(poster_response => {\r\n              const userInfo = poster_response.data[0];\r\n              post['username'] = userInfo['username'];\r\n              post['displayName'] = userInfo['displayName'];\r\n              post['avatar'] = userInfo['avatar']\r\n              post['verified'] = userInfo['verified'];\r\n\r\n              // For random name generation\r\n              if(post['username'].startsWith(\"random:\")){\r\n                const fake_user = getRandomUser()\r\n\r\n                post['username'] = fake_user['username'];\r\n                post['displayName'] = fake_user['displayName'];\r\n              }\r\n\r\n              // Adds the post info into the state\r\n              this.setState({posts: this.state.posts.concat(post), loading: false});\r\n              this.forceUpdate()\r\n            })\r\n            .catch(err2 => {\r\n              console.log(\"axios error with getting user info: \" + err2);\r\n              this.setState({loading: false});\r\n              })\r\n        })\r\n        .catch(err => {console.log(\"axios error: \" + err); this.setState({loading: false});})\r\n    }\r\n  }\r\n\r\n  handleScroll = (element) => {\r\n    element.preventDefault()\r\n    const height_target = Math.round(element.target.scrollHeight - element.target.scrollTop)\r\n\r\n    // Check if there are any posts left\r\n    if(this.state.idList.length > 0){\r\n      // checks if the user has scrolled to the bottom of the element\r\n      if (height_target <= Math.ceil(element.target.clientHeight) + 300) {\r\n        // only add post if a post isn't already loading\r\n        \r\n        if(this.state.loading === true) {\r\n          if(this.state.queue == false){ // Loading and not queuing\r\n            this.state.queue = true\r\n          }\r\n        }\r\n        else { // If not loading\r\n          for(let i=0;i<3 && this.state.idList.length > 0;i++)\r\n            this.addPost()\r\n        } \r\n      }\r\n    }\r\n    else{\r\n      console.log(\"Out of posts!\")\r\n       // Do something when it runs out of posts\r\n    }\r\n  }\r\n\r\n  handleClick = () =>{\r\n    this.forceUpdate()\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"feed\" onScroll={this.handleScroll}>\r\n        <div className=\"feed__header\">\r\n          <h2>Home</h2>\r\n        </div>\r\n        <TweetBox/>\r\n        <FlipMove>\r\n          {this.state.posts.map((post, index) => (\r\n            <Post\r\n              key={index}\r\n              username={post.username}\r\n              displayName={post.displayName}\r\n              verified={post.verified}\r\n              text={post.text}\r\n              avatar={post.avatar}\r\n              image={post.image}\r\n            />\r\n          ))}\r\n        </FlipMove>\r\n        <button onClick={this.handleClick} color=\"--twitter-color\"> ooh button! </button>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Function for getting random user using mocker-data-generator\r\n// This is way too complicated\r\nfunction getRandomUser(){\r\n  const mocker_schema = {\r\n    firstName: {faker: 'name.firstName'},\r\n    lastName: {faker: 'name.lastName'},\r\n    username: {function: function() {\r\n      return (this.object.firstName+this.object.lastName)\r\n    }},\r\n    displayName: {function: function() {\r\n      return (this.object.firstName + \" \" + this.object.lastName)\r\n    }}\r\n  }\r\n\r\n  const fake_user = mocker().schema('user', mocker_schema, 1).buildSync()['user'][0]\r\n  //console.log(fake_user)\r\n\r\n  return fake_user\r\n}\r\n\r\nexport default Feed;","import React from \"react\";\r\nimport \"./Widgets.css\";\r\nimport {\r\n  TwitterTimelineEmbed,\r\n  TwitterShareButton,\r\n  TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Widgets() {\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"widgets__input\">\r\n        <SearchIcon className=\"widgets__searchIcon\" />\r\n        <input placeholder=\"Search Barker\" type=\"text\" />\r\n      </div>\r\n\r\n      <div className=\"widgets__widgetContainer\">\r\n        <h2>What's happening</h2>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","import React from \"react\";\r\nimport settings from \"./settings\"\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport Feed from \"./Feed\";\r\nimport Widgets from \"./Widgets\";\r\n\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {viewerNum: 0, viewersList:[]}\r\n    this.nextViewer = this.nextViewer.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios\r\n      .get(settings.GET_VIEWERS_URL)\r\n      .then(response =>{\r\n        this.setState({viewersList: response.data})\r\n        console.log(\"Recieved users: \" + this.state.viewersList)\r\n      })\r\n      .catch(err => console.log(\"Error retrieving viewers list: \" + err))\r\n  }\r\n\r\n  nextViewer(){\r\n    // Increments viewerNum\r\n    // Wraps back to 0 when index exceeds length of viewersList\r\n    if(this.state.viewerNum <= this.state.viewersList.length-2){\r\n      this.setState({viewerNum: this.state.viewerNum+1})\r\n    }\r\n    else{\r\n      this.setState({viewerNum: 0})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      // BEM\r\n      <html lang=\"en\">\r\n        <div className=\"app\">\r\n          <Sidebar nextViewer={this.nextViewer}/>\r\n          <Feed viewer={this.state.viewersList[this.state.viewerNum]}/>\r\n          <Widgets />\r\n        </div>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}